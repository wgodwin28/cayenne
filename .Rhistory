# clear memory
rm(list=ls())
pack_lib <- "/Users/madelinecampbell/Desktop/wills_stuff/cayenne/packages"
.libPaths(pack_lib)
library(data.table); library(ggplot2)
#Read in accounts data
dt <- fread(paste0(in_dir, "Accounts.csv"))
#Set directories
in_dir <- "/Users/madelinecampbell/Desktop/wills_stuff/cayenne/data/"
#Read in accounts data
dt <- fread(paste0(in_dir, "Accounts.csv"))
dt
names(dt)
setnames(dt, "(No column name)", "relationship")
dt
#Read in accounts data
dt <- fread(paste0(in_dir, "Accounts.csv"))
setnames(dt, c("Promo Code / Referral Description", "(No column name)"), c("refer_descr", "relationship"))
names(dt)
dt_orders <- fread(paste0(in_dir, "Orders.csv"))
dt_orders
sum(unique(dt_orders$`Order Id`))
count(unique(dt_orders$`Order Id`))
length(unique(dt_orders$`Order Id`))
dt_shwviews <- fread(paste0(in_dir, "ShowcaseViews.csv"))
dt_shwreact <- fread(paste0(in_dir, "ShowcaseReactions.csv"))
dt_orders
dt_accounts
#Read in accounts data
dt_accounts <- fread(paste0(in_dir, "Accounts.csv"))
dt_accounts
dt_orders
class(dt_orders$OrderDate)
dt_orders[, OrderDate := as.Date(as.character(OrderDate), "%A, %B %d, %Y")]
dt_orders
#What's the average time between account creation and first purchase?
dt_orders <- fread(paste0(in_dir, "Orders.csv"))
dt_orders[, OrderDate := as.Date(as.character(OrderDate), "%A, %B %d, %Y")]
#What's the average time between account creation and first purchase?
dt_orders <- fread(paste0(in_dir, "Orders.csv"))
dt_orders[, OrderDate2 := as.Date(as.character(OrderDate), "%A, %B %d, %Y")]
dt_orders[, .(OrderDate, OrderDate2)]
dt_orders[, AccountCreatedDate2 := as.Date(as.character(AccountCreatedDate), "%A, %B %d, %Y")]
dt_orders[, .(AccountCreatedDate, AccountCreatedDate2)]
unique(dt_orders$`(No column name)`)
setnames(dt_orders, c("Promo Code / Referral Description", "(No column name)"), c("refer_descr", "relationship"))
#subset to exclude family, founders, and friends
dt_orders_friends <- dt_orders[relationship == "friends" | relationship == "no relation"]
dt_orders_nofriends <- dt_orders[relationship == "no relation"]
dt_orders[relationship == "friends"]
#subset to exclude family, founders, and friends
dt_orders_friends <- dt_orders[relationship == "friend" | relationship == "no relation"]
dt_orders_friends
dt_orders[, AccountCreatedDate := as.Date(as.character(AccountCreatedDate), "%A, %B %d, %Y")]
#subset to exclude family, founders, and friends
dt_orders_friends <- dt_orders[relationship == "friend" | relationship == "no relation"]
#subset to exclude family, founders, and friends
dt_orders_friends <- dt_orders[relationship == "friend" | relationship == "no relation"]
dt_orders_friends
dt_orders <- fread(paste0(in_dir, "Orders.csv"))
setnames(dt_orders, c("Promo Code / Referral Description", "(No column name)"), c("refer_descr", "relationship"))
#Clean dates
dt_orders[, OrderDate := as.Date(as.character(OrderDate), "%A, %B %d, %Y")]
dt_orders[, AccountCreatedDate := as.Date(as.character(AccountCreatedDate), "%A, %B %d, %Y")]
#subset to exclude family, founders, and friends
dt_orders_friends <- dt_orders[relationship == "friend" | relationship == "no relation"]
dt_orders_nofriends <- dt_orders[relationship == "no relation"]
dt_orders_friends
unique(dt_orders_friends$AccountId)
dt_orders_friends[unique(AccountId)]
View(dt_orders_friends)
####################################################################################
#What's the average time between account creation and first purchase?###############
####################################################################################
#Calculate time between account made and first purchase
dt_orders_friends[,order(AccountCreatedDate)]
####################################################################################
#What's the average time between account creation and first purchase?###############
####################################################################################
#Calculate time between account made and first purchase
dt_orders_friends[order(AccountCreatedDate)]
####################################################################################
#What's the average time between account creation and first purchase?###############
####################################################################################
#Calculate time between account made and first purchase
dt_orders_friends[order(AccountId, AccountCreatedDate)]
####################################################################################
#What's the average time between account creation and first purchase?###############
####################################################################################
#Calculate time between account made and first purchase
dt_orders_friends <- dt_orders_friends[order(AccountId, AccountCreatedDate)]
dt_orders_friends[!duplicated(AccountId),]
dt_orders_friends[, Purchase_days := AccountCreatedDate - OrderDate]
dt_orders_friends
dt_orders_friends[, Purchase_days := OrderDate - AccountCreatedDate]
dt_orders_friends
hist(dt_orders_friends$Purchase_days)
hist(as.numeric(dt_orders_friends$Purchase_days))
ggplot(dt_orders_friends, aes(x=Purchase_days)) + geom_histogram()
ggplot(dt_orders_friends, aes(x=Purchase_days)) + geom_histogram() +
geom_vline(aes(xintercept=mean(Purchase_days)), color="blue", linetype="dashed", size=1)
ggplot(dt_orders_friends, aes(x=Purchase_days)) + geom_histogram() +
geom_vline(aes(xintercept=mean(Purchase_days)), color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .05, .95)), color="red", linetype="dashed", size=1)
dt_orders_friends[, quantile(Purchase_days, .05, .95)]
dt_orders_friends[, Purchase_days := as.numeric(OrderDate - AccountCreatedDate)]
ggplot(dt_orders_friends, aes(x=Purchase_days)) + geom_histogram() +
geom_vline(aes(xintercept=mean(Purchase_days)), color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .05, .95)), color="red", linetype="dashed", size=1)
dt_orders_friends[, quantile(Purchase_days, .05, .95)]
dt_orders_friends[, quantile(Purchase_days, c(.05, .95))]
ggplot(dt_orders_friends, aes(x=Purchase_days)) + geom_histogram() +
geom_vline(aes(xintercept=mean(Purchase_days)), color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, c(.05, .95))), color="red", linetype="dashed", size=1)
ggplot(dt_orders_friends, aes(x=Purchase_days)) + geom_histogram() +
geom_vline(aes(xintercept=mean(Purchase_days)), color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .05)), color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .95)), color="red", linetype="dashed", size=1)
ggplot(dt_orders_friends, aes(x=Purchase_days)) + geom_histogram() +
geom_vline(aes(xintercept=mean(Purchase_days)), color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .05)), color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .95)), color="red", linetype="dashed", size=1) +
ylab("Frequency") + xlab("Number of Days between Account creation and First Purchase")
ggplot(dt_orders_friends, aes(x=Purchase_days)) + geom_histogram() +
geom_vline(aes(xintercept=mean(Purchase_days)), color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .05)), color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .95)), color="red", linetype="dashed", size=1) +
ylab("Frequency") + xlab("Days between account creation and first purchase")
ggplot(dt_orders_friends, aes(x=Purchase_days)) + geom_histogram() +
geom_vline(aes(xintercept=mean(Purchase_days)), color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .05)), color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .95)), color="red", linetype="dashed", size=1) +
ylab("Frequency") + xlab("# Days between account creation and first purchase")
dt_orders_friends[, quantile(Purchase_days, c(.05, .95))]
dt_orders_friends[, quantile(Purchase_days, c(.05,.5, .95))]
dt_orders_friends[length(Purchase_days == 0)]
dt_orders_friends[sum(Purchase_days == 0)]
dt_orders_friends[nrow(Purchase_days == 0)]
dt_orders_friends[Purchase_days == 0]
dt_orders_friends[Purchase_days == 0, nrow]
dt_orders_friends[Purchase_days == 0, nrow(dt_orders_friends)]
dt_orders_friends[Purchase_days < 7]
dt_orders_nofriends <- dt_orders_nofriends[order(AccountId, AccountCreatedDate)]
dt_orders_nofriends[!duplicated(AccountId),]
dt_orders_nofriends[, Purchase_days := as.numeric(OrderDate - AccountCreatedDate)]
#subset to exclude family, founders, and friends
dt_orders_friends <- dt_orders[relationship == "friend" | relationship == "no relation"]
dt_orders_friends[!duplicated(AccountId),]
####################################################################################
#What's the average time between account creation and first purchase?###############
####################################################################################
#Calculate time between account made and first purchase
dt_orders_nofriends <- dt_orders_nofriends[order(AccountId, AccountCreatedDate)]
####################################################################################
#What's the average time between account creation and first purchase?###############
####################################################################################
#Calculate time between account made and first purchase
dt_orders_nofriends <- dt_orders_nofriends[order(AccountId, AccountCreatedDate)]
dt_orders_nofriends <- dt_orders_nofriends[!duplicated(AccountId),]
dt_orders_nofriends[, Purchase_days := as.numeric(OrderDate - AccountCreatedDate)]
ggplot(dt_orders_nofriends, aes(x=Purchase_days)) + geom_histogram() +
geom_vline(aes(xintercept=mean(Purchase_days)), color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .05)), color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .95)), color="red", linetype="dashed", size=1) +
ylab("Frequency") + xlab("# Days between account creation and first purchase")
dt_temp <- copy(dt_orders_friends)
dt_temp <- dt_temp[order(AccountId, AccountCreatedDate)]
dt_temp <- dt_temp[!duplicated(AccountId),]
dt_temp[, Purchase_days := as.numeric(OrderDate - AccountCreatedDate)]
ggplot(dt_temp, aes(x=Purchase_days)) + geom_histogram() +
geom_vline(aes(xintercept=mean(Purchase_days)), color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .05)), color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .95)), color="red", linetype="dashed", size=1) +
ylab("Frequency") + xlab("# Days between account creation and first purchase")
dt_temp
nrow(dt_temp)
nrow(dt_temp[Purchase_days == 0])
quantile(dt_temp$Purchase_days, c(.05, .5, .95)
)
ggplot(dt_temp, aes(x=Purchase_days)) + geom_histogram() +
geom_vline(aes(xintercept=quantile(Purchase_days, .5)), color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .05)), color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .95)), color="red", linetype="dashed", size=1) +
ylab("Frequency") + xlab("# Days between account creation and first purchase")
dt_temp <- copy(dt_orders_nofriends)
dt_temp <- dt_temp[order(AccountId, AccountCreatedDate)]
dt_temp <- dt_temp[!duplicated(AccountId),]
dt_temp[, Purchase_days := as.numeric(OrderDate - AccountCreatedDate)]
ggplot(dt_temp, aes(x=Purchase_days)) + geom_histogram() +
geom_vline(aes(xintercept=quantile(Purchase_days, .5)), color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .05)), color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(Purchase_days, .95)), color="red", linetype="dashed", size=1) +
ylab("Frequency") + xlab("# Days between account creation and first purchase")
quantile(dt_temp$Purchase_days, c(.05, .5, .95)
)
dt_temp[Purchase_days==0]
dt_temp[Purchase_days!=0]
29/59
11/35
dt_temp
####################################################################################
#Best Performing Categories?########################################################
####################################################################################
dt_temp <- copy(dt_orders_nofriends)
dt_temp
#subset to exclude family, founders, and friends
dt_orders_friends <- dt_orders[relationship == "friend" | relationship == "no relation"]
dt_orders_nofriends <- dt_orders[relationship == "no relation"]
####################################################################################
#Best Performing Categories?########################################################
####################################################################################
dt_temp <- copy(dt_orders_nofriends)
dt_temp
unique(dt_orders_friends$`Product Category`)
####################################################################################
#Best Performing Categories?########################################################
####################################################################################
dt_temp <- copy(dt_orders_friends)
dt_melt <- melt(dt_temp, value.name = "Product Category")
dt_melt
melt(dt_temp, id = "Product Category")
table(dt_temp$`Product Category`)
names(dt_temp)
dt_temp[, sum(GrandTotal), by = "Product Category"]
t <- dt_temp[, sum(GrandTotal), by = "Product Category"]
setnames(t, "V1", "Total Revenue")
t
setkey(t, id = "Total Revenue")
t
order(t$`Product Category`)
t <- dt_temp[, sum(GrandTotal), by = "Product Category"]
order(t$`Product Category`)
t[order(`Product Category`)]
setnames(t, "V1", "Total Revenue")
t[order(`Product Category`)]
t[,order(`Product Category`)]
class(t$`Product Category`)
t[order("Total Revenue")]
t[,order("Total Revenue")]
t
class(t$`Total Revenue`)
t[order(Total Revenue)]
t[order("Total Revenue")]
t <- dt_temp[, sum(GrandTotal), by = "Product Category"]
setnames(t, "V1", "Total_Revenue")
t[order(Total_Revenue)]
t[-order(Total_Revenue)]
t[order-(Total_Revenue)]
t[order(-Total_Revenue)]
dt
dt_temp
dt_temp[, count := 1]
t2 <- dt_temp[, sum(count), by = "Product Category"]
t2
setnames(t2, "V1", "Total_Sold")
merge(t, t2, by= "Product Category")
t <- merge(t, t2, by = "Product Category")
t[order(-Total_Revenue)]
t <- t[order(-Total_Revenue)]
t
dt_temp
weekdays(dt_temp$OrderDate)
format(dt_temp$OrderDate, "%u") %in% c(6, 7)
dt_temp[, weekend := format(dt_temp$OrderDate, "%u") %in% c(6, 7)]
dt_temp
dt_temp[weekend == T]
dt_temp[weekend == T, weekend = 1]
dt_temp[weekend == T, weekend := 1]
dt_temp[, weekend2 := ifelse(weekend == T, 1, 0)]
dt_temp
dt_temp[, weekend := ifelse(weekend == T, 1, 0)]
dt_temp
dt_temp[, mean(weekend), by = "Product Category"]
t2 <- dt_temp[, mean(weekend), by = "Product Category"]
setnames(t2, "V1", "Percent_Weekend")
t2[, Percent_Weekend := Percent_Weekend * 100]
t2
nchar()
nchar
t2[, Percent_Weekend := nchar(Percent_Weekend * 100, 3)]
t2 <- dt_temp[, nchar(mean(weekend), 3), by = "Product Category"]
t2[, Percent_Weekend := round(Percent_Weekend * 100)]
t2
t2 <- dt_temp[, mean(weekend), 3), by = "Product Category"]
t2 <- dt_temp[, mean(weekend), by = "Product Category"]
setnames(t2, "V1", "Percent_Weekend")
t2[, Percent_Weekend := round(Percent_Weekend * 100)]
t2
t2 <- dt_temp[, mean(weekend), by = "Product Category"]
setnames(t2, "V1", "Percent_Weekend")
t2[, Percent_Weekend := round(Percent_Weekend * 100, 3)]
t2
t2 <- dt_temp[, mean(weekend), by = "Product Category"]
setnames(t2, "V1", "Percent_Weekend")
t2[, Percent_Weekend := round(Percent_Weekend * 100, 1)]
t2
merge(t, t2, by = "Product Category")
t2 <- dt_temp[, mean(weekend), by = "Product Category"]
setnames(t2, "V1", "Percent_on_Weekend")
t2[, Percent_on_Weekend := round(Percent_on_Weekend * 100, 1)]
merge(t, t2, by = "Product Category")
t <- merge(t, t2, by = "Product Category")
t <- t[order(-Total_Revenue)]
t
